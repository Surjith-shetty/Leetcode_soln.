int compare(const void* a, const void* b) {
    return (*(int**)a)[0] - (*(int**)b)[0];
}

int** merge(int** intervals, int intervalsSize, int* intervalsColSize, int* returnSize, int** returnColumnSizes) {
    qsort(intervals, intervalsSize, sizeof(int*), compare);

    int** result = (int**)malloc(sizeof(int*) * intervalsSize); 
    *returnColumnSizes = (int*)malloc(sizeof(int) * intervalsSize); 
    *returnSize = 0;

    for (int i = 0; i < intervalsSize; i++) {
        int start = intervals[i][0];
        int end = intervals[i][1];

        if (*returnSize == 0 || result[*returnSize - 1][1] < start) {
            result[*returnSize] = (int*)malloc(sizeof(int) * 2);  
            result[*returnSize][0] = start;
            result[*returnSize][1] = end;
            (*returnColumnSizes)[*returnSize] = 2;
            (*returnSize)++;
        } else {
            if (end > result[*returnSize - 1][1]) {
                result[*returnSize - 1][1] = end;
            }
        }
    }

    return result;
}
